// <auto-generated />
using System;
using HerdManagement.Infrastructure.Persistence.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace UI.Migrations.CharacteristicDb
{
    [DbContext(typeof(CharacteristicDbContext))]
    [Migration("20201230205050_charateristic_v0")]
    partial class charateristic_v0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Commentary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("_ValueList")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ValueList");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("BreedCharacteristics");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristicValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BreedCharacteristicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("_SelectedValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SelectedValue");

                    b.HasKey("Id");

                    b.HasIndex("BreedCharacteristicId");

                    b.ToTable("BreedCharacteristicValues");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Commentary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("_ValueList")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ValueList");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("SpecieCharacteristics");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristicValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpecieCharacteristicId")
                        .HasColumnType("int");

                    b.Property<string>("_SelectedValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SelectedValue");

                    b.HasKey("Id");

                    b.HasIndex("SpecieCharacteristicId");

                    b.ToTable("SpecieCharacteristicValues");
                });

            modelBuilder.Entity("HerdManagement.Domain.Common.Entities.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Commentary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeasurementUnit");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristic", b =>
                {
                    b.HasOne("HerdManagement.Domain.Common.Entities.MeasurementUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristicValue", b =>
                {
                    b.HasOne("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristic", null)
                        .WithMany("BreedCharacteristicValues")
                        .HasForeignKey("BreedCharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristic", b =>
                {
                    b.HasOne("HerdManagement.Domain.Common.Entities.MeasurementUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristicValue", b =>
                {
                    b.HasOne("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristic", null)
                        .WithMany("SpecieCharacteristicValues")
                        .HasForeignKey("SpecieCharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.BreedCharacteristic", b =>
                {
                    b.Navigation("BreedCharacteristicValues");
                });

            modelBuilder.Entity("HerdManagement.Domain.Characteristic.Entities.SpecieCharacteristic", b =>
                {
                    b.Navigation("SpecieCharacteristicValues");
                });
#pragma warning restore 612, 618
        }
    }
}
