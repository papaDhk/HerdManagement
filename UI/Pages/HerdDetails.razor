@page "/herds/{herdId:int}/{herdName}"

@inject ISpecieRepository specieRepository
@inject IBreedRepository breedRepository
@inject IAnimalRepository animalRepository
@inject IHerdRepository herdRepository
@inject NavigationManager navigationManager


<nav class="navbar navbar-light mb-3 horizontal-nav-bar justify-content-between">
    <h6>Troupeaux / @herdName</h6>
    <span class="oi oi-plus" aria-hidden="true" data-toggle="modal" data-target="#animalModalForm"></span>
</nav>

@if (breedDTOs == null)
{
    <img src="images/dog-alone.gif" class="rounded mx-auto d-block img-fluid" />
}
else
{
    <SfGrid @ref=@dataGrid DataSource=@males AllowSorting=true Toolbar=@ToolbarItems TValue=Male>
        <GridColumns>
            <GridColumn Field=@nameof(Male.Picture)>
                <Template>
                    @{ 
                        var male = context as Male;
                        var imageUrl = string.Empty;
                        if (male.Picture != null && male.Picture.Length > 0)
                        {
                            imageUrl = $"data:image/png;base64,{Convert.ToBase64String(male.Picture)}";
                        }

                    }
                    <img src="@imageUrl" class="img-thumbnail"/>
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(Male.Number)>
            </GridColumn>
            <GridColumn Field=@nameof(Male.Name)>
            </GridColumn>
            <GridColumn Field=@nameof(Male.Sex)>
            </GridColumn>
            <GridColumn Field=@nameof(Male.PresenceStatus)>
            </GridColumn>
            <GridColumn Field=@nameof(Male.Weight)>
            </GridColumn>
            <GridColumn>
                <Template>
                    @{

                        var male = context as Male;
                        var animalDetailsPageUri = $"/animals/{currentHerd.Name}/{male.Number}/{male.Name}";


                    }
                    <NavLink href=@animalDetailsPageUri class="btn btn-primary btn-sm">Details</NavLink>

                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>

    <div class="modal fade" id="animalModalForm" tabindex="-1" role="dialog" aria-labelledby="Enregistrer un nouveau membre" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="animalModalFormLabel">Enregistrer un nouveau membre</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="ClearModalForm">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <EditForm Model="@animalDTO" OnValidSubmit="SaveAnimalAsync">
                    <div class="modal-body">

                        <DataAnnotationsValidator />
                        <div class="form-group row">
                            <label for="name" class="col-3 col-form-label">
                                Nom
                            </label>
                            <div class="col-sm-9">
                                <InputText id="name" class="form-control" placeholder="Nom du troupeau" @bind-Value="animalDTO.Name" />
                                <ValidationMessage For="@(() => animalDTO.Name)" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="specie" class="col-3 col-form-label">
                                Espece
                            </label>
                            <div class="col-9">
                                <InputSelect id="breed" @bind-Value="animalDTO.BreedId" class="form-control">
                                    @foreach (var breed in breedDTOs)
                                        {
                                        <option value="@breed.Id">@breed.Label</option>
                                        }
                                </InputSelect>
                                <ValidationMessage For="@(() => animalDTO.BreedId)" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="number" class="col-3 col-form-label">
                                Numero
                            </label>
                            <div class="col-sm-9">
                                <InputNumber id="number" class="form-control" placeholder="numero de l'animal" @bind-Value="animalDTO.Number" />
                                <ValidationMessage For="@(() => animalDTO.Number)" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="birthDate" class="col-3 col-form-label">
                                Date de naissance
                            </label>
                            <div class="col-sm-9">
                                <InputDate id="birthDate" class="form-control" placeholder="Date de naissance" @bind-Value="animalDTO.BirthDate" />
                                <ValidationMessage For="@(() => animalDTO.BirthDate)" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="picture" class="col-3 col-form-label">
                                Photo
                            </label>
                            <div class="col-sm-9">
                                <InputFile id="picture" class="form-control" OnChange="@OnInputFileChange" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="ClearModalForm">Close</button>
                        <button type="submit" class="btn btn-primary">Enregistrer</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>


}


@code {
    [Parameter]
    public int herdId { get; set; }

    [Parameter]
    public string herdName { get; set; }

    private HerdDTO currentHerd;

    SfGrid<Male> dataGrid;

    private List<Male> males;

    private List<BreedDTO> breedDTOs;

    private BreedDTO selectedBreed;

    private AnimalDTO animalDTO = new AnimalDTO {BirthDate = DateTime.UtcNow };

    public string[] ToolbarItems = new string[] { "Search" };



    protected async override Task OnInitializedAsync()
    {
        currentHerd = await herdRepository.GetHerdById(herdId).ContinueWith(herd => herd.Result.ToHerdDTO());
        animalDTO.Herd = currentHerd;

        males = animalRepository.GetMalesByHerdId(herdId).ToList();

        breedDTOs = await breedRepository.GetAllBreeds().ContinueWith(breeds => breeds.Result.ToBreedDTOList().ToList());
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var maxAllowedFiles = 1;
        var format = "image/png";

        foreach (var imageFile in e.GetMultipleFiles(maxAllowedFiles))
        {
            var resizedImageFile = await imageFile.RequestImageFileAsync(format,
                300, 300);
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream().ReadAsync(buffer);
            animalDTO.Picture = buffer;
        }
    }

    private void ClearModalForm()
    {
        animalDTO = new AnimalDTO { Herd = currentHerd, BirthDate = DateTime.UtcNow };
    }

    private async Task SaveAnimalAsync()
    {
        var newAnimal = await animalRepository.AddNewMaleAsync(animalDTO.ToMale());

        males.Add(newAnimal);

        dataGrid.Refresh();

        ClearModalForm();

    }
}
