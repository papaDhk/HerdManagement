@page "/breeds"
@using HerdManagement.Infrastructure.Persistence.Repository
@using HerdManagement.Domain.SpecieBreed.Entities
@using Syncfusion.Blazor.Grids
@using Newtonsoft.Json
@using Syncfusion.Blazor
@using Syncfusion.Blazor.DropDowns
@using System.Linq
@using HerdManagement.Domain.SpecieBreed.Repository

@inject IBreedRepository breedRepository
@inject ISpecieRepository specieRepository


<nav class="navbar navbar-light mb-3 horizontal-nav-bar">
    <h4>Races</h4>
</nav>

@if (breedDTOs == null)
{
    <img src="images/dog-alone.gif" class="rounded mx-auto d-block img-fluid" />
}
else
{
    <SfGrid DataSource="@breedDTOs" AllowSorting="true" Toolbar="@ToolbarItems" TValue="BreedDTO">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
        <GridEvents OnActionBegin="OnBeginHandlerAsync" TValue="BreedDTO"></GridEvents>
        <GridColumns>
            <GridColumn Field=@nameof(BreedDTO.Label)>
            </GridColumn>
            <GridColumn Field=@nameof(BreedDTO.Specie) EditType="EditType.DropDownEdit">
                <EditTemplate>
                    <SfDropDownList ID="ShipCountry" Placeholder="Select a Country" TItem="SpecieDTO" TValue="int" DataSource="@specieDTOs">
                        <DropDownListEvents TItem="SpecieDTO" TValue="int" ValueChange="OnValueChange"></DropDownListEvents>
                        <DropDownListFieldSettings Text="Label" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </EditTemplate>
                <Template>
                    @{
                        var breed = (context as BreedDTO);
                        <span>@breed.Specie.Label</span>
                    }
                </Template>

            </GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    private List<BreedDTO> breedDTOs;
    private List<SpecieDTO> specieDTOs;
    private List<String> specieLabels;
    private SpecieDTO selectedSpecie;
    protected override async Task OnInitializedAsync()
    {
        IEnumerable<Breed> breeds = await breedRepository.GetAllBreeds();

        breedDTOs = breeds.ToBreedDTOList().ToList();

        IEnumerable<Specie> species = await specieRepository.GetAllSpecies();

        specieDTOs = species.ToSpecieDTOList().ToList();

        specieLabels = specieDTOs.Select(s => s.Label).ToList();
    }

    public string[] ToolbarItems = new string[] { "Add", "Edit", "Update", "Cancel" };

    private async Task OnBeginHandlerAsync(ActionEventArgs<BreedDTO> Args)
    {
        if (Args.Action == "Add")
        {
            BreedDTO newBreedDTO = Args.Data;
            newBreedDTO.Specie = selectedSpecie;
            Breed createdBreed = await breedRepository.CreateBreed(newBreedDTO.ToBreed());
        }
        else if (Args.Action == "Edit")
        {
            BreedDTO newBreedDTO = Args.Data;
            int result = await breedRepository.UpdateBreed(newBreedDTO.ToBreed());
        }
    }

    private void OnValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, SpecieDTO> args)
    {
        selectedSpecie = args.ItemData;
    }
}
